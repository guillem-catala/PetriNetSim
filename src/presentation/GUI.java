/* Copyright Guillem Catala. www.guillemcatala.com/petrinetsim. Licensed http://creativecommons.org/licenses/by-nc-sa/3.0/ */

/*
 * GUI.java
 *
 * Created on 06-ago-2009, 11:34:45
 */
package presentation;

import business.Global;
import business.NetClass;
import business.NetObject;
import business.PetriNet;
import business.TimedSimulation;
import data.FileManager;
import java.awt.Component;
import java.awt.Toolkit;
import java.io.File;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractButton;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JToggleButton;
import javax.swing.SwingConstants;
import javax.swing.UIManager;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.TransformerConfigurationException;
import javax.xml.transform.TransformerException;

/**
 *
 * @author Guillem
 */
public class GUI extends javax.swing.JFrame {

    /** The simulator thread*/
    private volatile TimedSimulation simulator;
    private String defaultPath = "c:\\PetriNetSim\\exemples";
    private String javaSource;
    private ArrayList buttonGroup1 = new ArrayList();

    /** Creates new form GUI */
    public GUI() {
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Could not load Look And Feel", "Invalid LookandFeel",
                    JOptionPane.ERROR_MESSAGE);
        }

        initComponents();
        this.setTitle(Global.petriNet.getLabel() + " - PetriNetSim");
        setIconImage(Toolkit.getDefaultToolkit().getImage(this.getClass().getResource("images/icon.png")));

        buttonGroup1.add(btnSelect);
        buttonGroup1.add(btnPlay);
        buttonGroup1.add(btnStep);
        buttonGroup1.add(btnPlace);
        buttonGroup1.add(btnTransition);
        buttonGroup1.add(btnNormalArc);


    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jToolBar1 = new javax.swing.JToolBar();
        btnNew = new javax.swing.JButton();
        btnOpen = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        btnSelect = new javax.swing.JToggleButton();
        btnPlace = new javax.swing.JToggleButton();
        btnTransition = new javax.swing.JToggleButton();
        btnNormalArc = new javax.swing.JToggleButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        btnPlay = new javax.swing.JButton();
        btnStep = new javax.swing.JButton();
        btnStop = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        btnGrid = new javax.swing.JToggleButton();
        jSplitPane1 = new javax.swing.JSplitPane();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton3 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        canvas = new presentation.Canvas();
        jToolBar2 = new javax.swing.JToolBar();
        jLabel1 = new javax.swing.JLabel();
        txtClock = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        btnNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/presentation/images/new.png"))); // NOI18N
        btnNew.setToolTipText("New");
        btnNew.setBorderPainted(false);
        btnNew.setFocusable(false);
        btnNew.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnNew.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });
        jToolBar1.add(btnNew);

        btnOpen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/presentation/images/open.png"))); // NOI18N
        btnOpen.setToolTipText("Open");
        btnOpen.setBorderPainted(false);
        btnOpen.setFocusable(false);
        btnOpen.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnOpen.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOpenActionPerformed(evt);
            }
        });
        jToolBar1.add(btnOpen);

        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/presentation/images/save.png"))); // NOI18N
        btnSave.setToolTipText("Save");
        btnSave.setBorderPainted(false);
        btnSave.setFocusable(false);
        btnSave.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSave.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        jToolBar1.add(btnSave);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/presentation/images/netsource.png"))); // NOI18N
        jButton1.setToolTipText("View Net Source");
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton1);
        jToolBar1.add(jSeparator3);

        btnSelect.setSelected(true);
        setSelectionMode();
        btnSelect.setIcon(new javax.swing.ImageIcon(getClass().getResource("/presentation/images/select.png"))); // NOI18N
        btnSelect.setToolTipText("Select");
        btnSelect.setFocusable(false);
        btnSelect.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSelect.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectActionPerformed(evt);
            }
        });
        jToolBar1.add(btnSelect);

        btnPlace.setIcon(new javax.swing.ImageIcon(getClass().getResource("/presentation/images/createPlace.png"))); // NOI18N
        btnPlace.setToolTipText("Place");
        btnPlace.setFocusable(false);
        btnPlace.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnPlace.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnPlace.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlaceActionPerformed(evt);
            }
        });
        jToolBar1.add(btnPlace);

        btnTransition.setIcon(new javax.swing.ImageIcon(getClass().getResource("/presentation/images/createTransition.png"))); // NOI18N
        btnTransition.setToolTipText("Transition");
        btnTransition.setFocusable(false);
        btnTransition.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnTransition.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnTransition.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTransitionActionPerformed(evt);
            }
        });
        jToolBar1.add(btnTransition);

        btnNormalArc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/presentation/images/normalarc.png"))); // NOI18N
        btnNormalArc.setToolTipText("Normal Arc");
        btnNormalArc.setFocusable(false);
        btnNormalArc.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnNormalArc.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnNormalArc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNormalArcActionPerformed(evt);
            }
        });
        jToolBar1.add(btnNormalArc);
        jToolBar1.add(jSeparator1);

        btnPlay.setIcon(new javax.swing.ImageIcon(getClass().getResource("/presentation/images/play.png"))); // NOI18N
        btnPlay.setToolTipText("Run");
        btnPlay.setBorderPainted(false);
        btnPlay.setFocusable(false);
        btnPlay.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnPlay.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnPlay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlayActionPerformed(evt);
            }
        });
        jToolBar1.add(btnPlay);

        btnStep.setIcon(new javax.swing.ImageIcon(getClass().getResource("/presentation/images/step.png"))); // NOI18N
        btnStep.setToolTipText("Step");
        btnStep.setBorderPainted(false);
        btnStep.setFocusable(false);
        btnStep.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnStep.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnStep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStepActionPerformed(evt);
            }
        });
        jToolBar1.add(btnStep);

        btnStop.setVisible(false);
        btnStop.setIcon(new javax.swing.ImageIcon(getClass().getResource("/presentation/images/stop.png"))); // NOI18N
        btnStop.setToolTipText("Stop");
        btnStop.setBorderPainted(false);
        btnStop.setFocusable(false);
        btnStop.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnStop.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnStop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStopActionPerformed(evt);
            }
        });
        jToolBar1.add(btnStop);
        jToolBar1.add(jSeparator2);

        btnGrid.setIcon(new javax.swing.ImageIcon(getClass().getResource("/presentation/images/grid.png"))); // NOI18N
        btnGrid.setToolTipText("Toggle Grid");
        btnGrid.setFocusable(false);
        btnGrid.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnGrid.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnGrid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGridActionPerformed(evt);
            }
        });
        jToolBar1.add(btnGrid);

        jSplitPane1.setDividerLocation(600);
        jSplitPane1.setResizeWeight(1.0);

        jTabbedPane1.setBackground(new java.awt.Color(204, 204, 255));

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        jButton3.setText("Clean");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 310, Short.MAX_VALUE)
            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 310, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 685, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane1.addTab("Log", jPanel2);

        jSplitPane1.setRightComponent(jTabbedPane1);

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));

        javax.swing.GroupLayout canvasLayout = new javax.swing.GroupLayout(canvas);
        canvas.setLayout(canvasLayout);
        canvasLayout.setHorizontalGroup(
            canvasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 970, Short.MAX_VALUE)
        );
        canvasLayout.setVerticalGroup(
            canvasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1026, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(canvas);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 579, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 731, Short.MAX_VALUE)
                .addContainerGap())
        );

        jSplitPane1.setLeftComponent(jPanel1);

        jToolBar2.setFloatable(false);
        jToolBar2.setRollover(true);

        jLabel1.setText("Global Clock ");
        jToolBar2.add(jLabel1);

        txtClock.setFont(new java.awt.Font("Tahoma", 1, 14));
        txtClock.setText("0");
        txtClock.setHorizontalAlignment(SwingConstants.TRAILING);
        txtClock.setEditable(false);
        jToolBar2.add(txtClock);

        jMenu1.setMnemonic('F');
        jMenu1.setText("File");

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/presentation/images/new.png"))); // NOI18N
        jMenuItem4.setText("New Net");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuItem7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/presentation/images/open.png"))); // NOI18N
        jMenuItem7.setText("Open...");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem7);

        jMenuItem5.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/presentation/images/save.png"))); // NOI18N
        jMenuItem5.setText("Save As...");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem5);

        jMenuItem9.setText("Export PNG");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem9);

        jMenuItem6.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/presentation/images/exit.png"))); // NOI18N
        jMenuItem6.setMnemonic('E');
        jMenuItem6.setText("Exit");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem6);

        jMenuBar1.add(jMenu1);

        jMenu2.setMnemonic('O');
        jMenu2.setText("Options");

        jMenuItem8.setText("Animation Options");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem8);

        jMenuBar1.add(jMenu2);

        jMenu3.setMnemonic('H');
        jMenu3.setText("Help");

        jMenuItem2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/presentation/images/about.png"))); // NOI18N
        jMenuItem2.setText("About");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem2);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62)
                .addComponent(jToolBar2, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(jSplitPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 921, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jToolBar2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 755, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOpenActionPerformed
        openFile();
}//GEN-LAST:event_btnOpenActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        saveFile();

}//GEN-LAST:event_btnSaveActionPerformed

    private void btnStepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStepActionPerformed
        steppedSimulation(evt);

}//GEN-LAST:event_btnStepActionPerformed

    private void btnPlayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlayActionPerformed
        continuousSimulation(evt);

}//GEN-LAST:event_btnPlayActionPerformed

    private void btnStopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStopActionPerformed
        stopSimulation(evt);
}//GEN-LAST:event_btnStopActionPerformed

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        newNet();
}//GEN-LAST:event_btnNewActionPerformed

    private void btnSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectActionPerformed
        deactivateButtons((JToggleButton) evt.getSource());
        setSelectionMode();
        Global.mode = Global.SELECTMODE;
}//GEN-LAST:event_btnSelectActionPerformed

    private void btnPlaceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlaceActionPerformed
        deactivateButtons((JToggleButton) evt.getSource());
        Global.mode = Global.PLACEMODE;
}//GEN-LAST:event_btnPlaceActionPerformed

    private void btnTransitionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTransitionActionPerformed
        deactivateButtons((JToggleButton) evt.getSource());
        Global.mode = Global.TRANSITIONMODE;
}//GEN-LAST:event_btnTransitionActionPerformed

    private void btnNormalArcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNormalArcActionPerformed
        deactivateButtons((JToggleButton) evt.getSource());
        Global.mode = Global.NORMALARCMODE;
}//GEN-LAST:event_btnNormalArcActionPerformed

    private void btnGridActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGridActionPerformed
//        deactivateButtons((JToggleButton) evt.getSource());
        this.canvas.setEnabledGrid(!this.canvas.isEnabledGrid());
        this.canvas.repaint();
}//GEN-LAST:event_btnGridActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        FrmAnimationOptions jform = new FrmAnimationOptions(JOptionPane.getFrameForComponent(this), true);
        jform.setVisible(true);
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        this.jTextArea1.setText("");
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        openFile();
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        FrmAbout jform = new FrmAbout(JOptionPane.getFrameForComponent(this), true);
        jform.setVisible(true);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
        FileManager fileManager = new FileManager();
        jFileChooser1 = new javax.swing.JFileChooser(defaultPath);
        int option = this.jFileChooser1.showSaveDialog(this);
        if (option == JFileChooser.APPROVE_OPTION) {
            if (this.jFileChooser1.getSelectedFile() != null) {
                File file = this.jFileChooser1.getSelectedFile();
                fileManager.savePNG(canvas.drawCanvas(), file);
            }
        }
    }//GEN-LAST:event_jMenuItem9ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        newNet();
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        saveFile();
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        NetClass net = new NetClass();
        FrmViewSource jform = new FrmViewSource(JOptionPane.getFrameForComponent(this), true, net.getNetSource().toString(), "View Source Code");
        jform.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    /** Enabled or disables all buttons in arrayList except the one passed by parameter*/
    private void setEnabledButtons(JButton button, ArrayList buttons, boolean bool) {

        for (int j = 0; j < buttons.size(); j++) {
            AbstractButton btn = (AbstractButton) buttons.get(j);
            for (int i = 0; i < this.jToolBar1.getComponents().length; i++) {
                if (this.jToolBar1.getComponent(i) instanceof AbstractButton) {
                    AbstractButton b = (AbstractButton) this.jToolBar1.getComponent(i);
                    if (btn.equals(b) && !btn.equals(button)) {
                        if (b instanceof JToggleButton) {
                            ((JToggleButton) b).setSelected(false);
                        }
                        b.setEnabled(bool);

                    }
                }
            }
        }
        // setSelectionMode();
        enableControlButtons(!bool);
    }

    /** Enables or disable the stop button*/
    public void enableControlButtons(boolean b) {
        btnStop.setVisible(b);
    }

    /** Deselects all toggle buttons from toolbar except the one passed by parameter */
    private void deactivateButtons(javax.swing.JToggleButton button) {
        for (int i = 0; i < this.jToolBar1.getComponents().length; i++) {
            Component component = this.jToolBar1.getComponent(i);
            if (component instanceof javax.swing.JToggleButton) {
                if (!component.equals(button)) {
                    javax.swing.JToggleButton b = (JToggleButton) component;
                    b.setSelected(false);
                    if (component.equals(this.btnSelect)) {
                        setSelectionMode();
                    }
                }
            }

        }
    }

    /** Starts the continuous simulation process*/
    public void continuousSimulation(java.awt.event.ActionEvent evt) {
        NetClass n = new NetClass();
        this.javaSource = n.getNetSource().toString();
        Global.mode = Global.SIMULATIONMODE;
        setEnabledButtons(null, buttonGroup1, false);

        this.jTextArea1.setText("");
        ((JButton) (evt.getSource())).setEnabled(false);
        if (simulator == null) {
            simulator = new TimedSimulation(false, this);
            simulator.start();
        }
    }

    /** Starts or continues the stepped simulation process (One transition fire at a time) */
    public void steppedSimulation(java.awt.event.ActionEvent evt) {
        Global.mode = Global.SIMULATIONMODE;
        setEnabledButtons((JButton) evt.getSource(), buttonGroup1, false);

        if (simulator == null) {
            this.jTextArea1.setText("");
            NetClass n = new NetClass();
            this.javaSource = n.getNetSource().toString();
            simulator = new TimedSimulation(true, this);
            simulator.start();
        } else {
            if (simulator.isAlive()) {
                if (simulator.isPaused()) {
                    simulator.setPaused(false);
                    synchronized (simulator) {
                        this.simulator.notify();
                    }
                } else {
                }
            }
        }
    }

    /** Interrupts the simulation process */
    public void stopSimulation(java.awt.event.ActionEvent evt) {
        setEnabledButtons((JButton) evt.getSource(), buttonGroup1, true);
        this.txtClock.setText("0");
        if (simulator != null) {
            simulator.setStop(true);
            while (simulator.isAlive()) {
            }

            simulator = null;
            this.btnStop.setVisible(false);
            NetClass n = new NetClass();
            try {
                n.compile(javaSource);
            } catch (Exception e) {
                FrmViewSource jform = new FrmViewSource(JOptionPane.getFrameForComponent(this), true, e.getMessage(), "Compilation Errors");
                jform.setVisible(true);
                Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, e);
            }

            canvas.repaint();
        }
    }

    /** Creates a new Net model and reinitializes editor properties*/
    public void newNet() {

        if (simulator == null || !simulator.isAlive()) {
            NetObject.LATEST_ID = 0;
            canvas.getSelectionManager().removeSelectedFigures();
            Global.petriNet = new PetriNet();
            canvas.setFigures(new HashMap());
            canvas.repaint();
            this.setTitle(Global.petriNet.getLabel());
            this.jTextArea1.setText("");
        }
    }

    /** Opens a Petri Net file and loads it to canvas*/
    private void openFile() {
        if (simulator == null || !simulator.isAlive()) {
            NetObject.LATEST_ID = 0;
            canvas.getSelectionManager().removeSelectedFigures();
            FileManager handler = new FileManager();
            jFileChooser1 = new javax.swing.JFileChooser(defaultPath);
            int val = this.jFileChooser1.showOpenDialog(this);
            if (val == JFileChooser.APPROVE_OPTION) {
                File file = this.jFileChooser1.getSelectedFile();
                canvas.setFigures(handler.loadFile(file));


                this.setTitle(Global.petriNet.getLabel());
            }
            //to be removed test only
            // canvas.setFigures(handler.loadFile(new File("test.xml")));
            canvas.repaint();
            this.jTextArea1.setText("");
        }
    }

    /** Save the current model to a file*/
    public void saveFile() {

        if (simulator == null || !simulator.isAlive()) {
            FileManager fileManager = new FileManager();
            jFileChooser1 = new javax.swing.JFileChooser(defaultPath);

            int option = this.jFileChooser1.showSaveDialog(this);
            if (option == JFileChooser.APPROVE_OPTION) {
                if (this.jFileChooser1.getSelectedFile() != null) {
                    File file = this.jFileChooser1.getSelectedFile();
                    try {
                        fileManager.generateXML(this.canvas.getFigures(), file);
                    } catch (ParserConfigurationException ex) {
                        Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (TransformerConfigurationException ex) {
                        Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (TransformerException ex) {
                        Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
                    }

                }
            }
        }
    }

    /** Checks whether the selection toggle button is enabled or not.
    If true, enables the Selection Manager */
    private void setSelectionMode() {
        if (this.btnSelect.isSelected()) {
            canvas.getSelectionManager().setSelectionEnabled(true);
        } else {
            canvas.getSelectionManager().setSelectionEnabled(false);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton btnGrid;
    private javax.swing.JButton btnNew;
    private javax.swing.JToggleButton btnNormalArc;
    private javax.swing.JButton btnOpen;
    private javax.swing.JToggleButton btnPlace;
    private javax.swing.JButton btnPlay;
    private javax.swing.JButton btnSave;
    private javax.swing.JToggleButton btnSelect;
    private javax.swing.JButton btnStep;
    private javax.swing.JButton btnStop;
    private javax.swing.JToggleButton btnTransition;
    private presentation.Canvas canvas;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JToolBar jToolBar2;
    private javax.swing.JTextField txtClock;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the jTextArea1
     */
    public javax.swing.JTextArea getJTextArea1() {
        return jTextArea1;
    }

    /**
     * @return the canvas
     */
    public presentation.Canvas getCanvas() {
        return canvas;
    }

    /**
     * @return the txtClock
     */
    public javax.swing.JTextField getTxtClock() {
        return txtClock;
    }
}
